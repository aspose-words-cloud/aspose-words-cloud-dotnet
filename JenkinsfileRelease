properties([
	gitLabConnection('gitlab')
])

parameters {		
		string(name: 'SDK_VERSION', defaultValue: '19.9.0', description: 'version of sdk')
}

def buildCacheImage = "git.auckland.dynabic.com:4567/words-cloud/api/net"

node('win2019') {
	try {
		gitlabCommitStatus("checkout") {
			stage('checkout'){
				checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-dotnet.git']]])
			}
		}

		gitlabCommitStatus("build") {
			stage('build'){
				withCredentials([file(credentialsId: 'pfxFile', variable: 'pfxFilePath')]) {
					powershell "Copy-Item $pfxFilePath -Destination  .\\scripts\\aspose.pfx"
				}
				
				withCredentials([file(credentialsId: 'snkFile', variable: 'snkFilePath')]) {
					powershell "Copy-Item $snkFilePath -Destination .\\scripts\\aspose.snk"
				}

				withCredentials([usernamePassword(credentialsId: 'cc2e3c9b-b3da-4455-b702-227bcce18895', usernameVariable: 'dockerrigistry_login', passwordVariable: 'dockerregistry_password')]) {
					bat 'docker login -u "%dockerrigistry_login%" -p "%dockerregistry_password%" git.auckland.dynabic.com:4567'
				}
                
                bat (script: "docker pull ${buildCacheImage}/buildenv || exit 0")
                bat 'if exist c:\\temp\\netbuild del /s /q c:\\temp\\netbuild'
                bat 'if exist temp del /s /q temp'
                powershell(script: 'Copy-Item -Path . -Destination c:\\temp\\netbuild -filter *.csproj -Recurse -Container')
                powershell(script: 'Copy-Item -Path . -Destination c:\\temp\\netbuild -filter *.sln -Recurse -Container')
                powershell(script: '$currFolderName = (Get-Item .).Name ; Copy-Item -Path c:\\temp\\netbuild\\$currFolderName -Destination .\\temp -Recurse -Container')
                bat (script: "docker build --force-rm -m 4g -f scripts\\buildEnv.Dockerfile --isolation=hyperv --cache-from=${buildCacheImage}/buildenv -t ${buildCacheImage}/buildenv temp")
                bat (script: "docker push ${buildCacheImage}/buildenv")
				
                bat (script: "docker build --force-rm -m 4g -f scripts\\buildRelease.Dockerfile --isolation=hyperv -t netreleasesdkbuild --cache-from=${buildCacheImage} -t ${buildCacheImage} .")
                
                bat (script: "if not exist packages mkdir packages")
				powershell (script: 'docker run --rm -m 4g -v $PWD\\packages:C:\\build\\packages\\ -e SDK_VERSION=$env:SDK_VERSION --isolation=hyperv netreleasesdkbuild scripts\\build-release.bat')
				stash name: "package", includes: "packages\\*.nupkg"
			}
		}
	} finally {
		deleteDir()
	}
}

stage('wait for publish confirmation'){
	timeout(time:1, unit:'DAYS') {
		input message:'Publish packet?'
	}
}	

node('win2019') {
	try {
		gitlabCommitStatus("checkout") {
			stage('checkout'){
				checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-dotnet.git']]])
			}
		}
		
		gitlabCommitStatus("publish") {
			stage('publish') {
				unstash "package"
			
				withCredentials([string(credentialsId: 'nugetToken', variable: 'token')]) {
					bat '.nuget\\NuGet.exe push packages\\Aspose.Words-Cloud.%SDK_VERSION%.nupkg -ApiKey %token% -Timeout 610 -Source https://www.nuget.org/api/v2/package'
				}
			}
		}
		
        stage('Merge master to release'){
            checkout([$class: 'GitSCM', branches: [[name: '*/release']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-dotnet.git']]])
            bat "git config user.email 'jenkins.aspose@gmail.com'"
            bat "git config user.name 'jenkins'"
            bat "git checkout --merge release"
            bat "git reset --hard origin/release"
            bat "git merge --no-ff --allow-unrelated-histories origin/master"
            bat "git diff --name-status"
            bat 'git commit -am "Merged master branch to release" || exit 0'
            withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
                bat "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/words-cloud/words-cloud-dotnet.git release"
            }
        }
        
        stage('Merge master to testPublishedPackage'){
            checkout([$class: 'GitSCM', branches: [[name: '*/testPublishedPackage']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'LocalBranch', localBranch: "**"]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-dotnet.git']]])
            bat "git config user.email 'jenkins.aspose@gmail.com'"
            bat "git config user.name 'jenkins'"
            bat "git checkout --merge testPublishedPackage"
            bat "git reset --hard origin/testPublishedPackage"
            bat "git merge --no-ff --allow-unrelated-histories origin/master"
            powershell '((Get-Content -path Aspose.Words.Cloud.Sdk.Tests/Aspose.Words.Cloud.Sdk.Tests.csproj -Raw) -replace "(Include=`"Aspose.Words-Cloud`" Version=`")(\\w+.\\w+.\\w+)(`")", ("Include=`"Aspose.Words-Cloud`" Version=`"" + $env:SDK_VERSION + "`"")) | Set-Content -Path Aspose.Words.Cloud.Sdk.Tests/Aspose.Words.Cloud.Sdk.Tests.csproj'
            powershell '((Get-Content -path Aspose.Words.Cloud.Sdk.BddTests/Aspose.Words.Cloud.Sdk.BddTests.csproj -Raw) -replace "(Include=`"Aspose.Words-Cloud`" Version=`")(\\w+.\\w+.\\w+)(`")", ("Include=`"Aspose.Words-Cloud`" Version=`"" + $env:SDK_VERSION + "`"")) | Set-Content -Path Aspose.Words.Cloud.Sdk.BddTests/Aspose.Words.Cloud.Sdk.BddTests.csproj'
            bat "git diff --name-status"
            bat 'git commit -am "Merged master branch to testPublishedPackage" || exit 0'
            withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
                bat "git push https://$gitUsername:$gitPass@git.auckland.dynabic.com/words-cloud/words-cloud-dotnet.git testPublishedPackage"
            }
        }
        
		gitlabCommitStatus("add version tag") {
			stage('add version tag') {			
				bat "git config user.email 'jenkins.aspose@gmail.com'"
				bat "git config user.name 'jenkins'"
				
				bat "git clean -fd"
				bat 'git reset --hard origin/master'
				bat "git tag -a %SDK_VERSION% -m \"version %SDK_VERSION%\""
				
				withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', usernameVariable: 'gitUsername', passwordVariable: 'gitPass')]) {
					bat "git push https://%gitUsername%:%gitPass%@git.auckland.dynabic.com/words-cloud/words-cloud-dotnet.git %SDK_VERSION%"
				}
			}
		}
	} finally {
		deleteDir()
	}
}