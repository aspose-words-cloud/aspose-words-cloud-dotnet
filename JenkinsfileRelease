node('billing-qa') {      
    try {
        stage('checkout'){
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '9d6c4dfa-042c-4ed1-81c7-9175179dddda', url: 'https://github.com/aspose-words-cloud/aspose-words-cloud-dotnet.git/']]])
          		
			bat "git config user.email \"jenkins.aspose@gmail.com\""
			bat "git config user.name \"jenkins\""
       }
       
	   stage('build'){
			bat 'if exist "Aspose.Words.Cloud.Sdk\bin" del "Aspose.Words.Cloud.Sdk\bin"'
						
			bat '".nuget/NuGet.exe" restore Aspose.Words.Cloud.Sdk.sln'
			bat ".\\tools\\specflow\\specflow.exe generateall  Aspose.Words.Cloud.Sdk.BddTests\\Aspose.Words.Cloud.Sdk.BddTests.csproj /force /verbose"
			bat "\"${tool 'MSBuild 15.0'}\" Aspose.Words.Cloud.Sdk.sln /p:Configuration=Release"
		
			def workspace = pwd()
			
			// create strong name assembly
			bat '"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\Bin\\ildasm" %workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\net2\\Aspose.Words.Cloud.Sdk.dll /out=%workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.il'
			withCredentials([file(credentialsId: 'dcc58cd5-b536-4878-ae29-593ac0c0621e', variable: 'keyFile')]) {
				bat '"C:\\Windows\\Microsoft.NET\\Framework\\v2.0.50727\\ilasm" %workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.il /res=%workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.res /dll /key=%keyFile% /out=%workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.dll'
				bat '"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\Bin\\sn" -Ra "%workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.dll" %keyFile%'
			}
			
			// sign assembly
			withCredentials([file(credentialsId: '55726057-1cea-4953-a552-85507cd5722f', variable: 'keyFile')]) {
				bat '"tools\\signtool.exe" sign /f %keyFile% /fd sha256 /p f27Hp99Ds3 /tr http://timestamp.comodoca.com/?td=sha256 /td sha256 /v %workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.dll'
			}
			
			// check sign
			bat '"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\Bin\\sn" -vf %workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.dll'
			bat '"tools\\signtool.exe" verify /pa %workspace%\\Aspose.Words.Cloud.Sdk\\bin\\Release\\Aspose.Words.Cloud.Sdk.dll'
			
			// create package
			packageCreationOutput = bat(returnStdout: true, script: '".nuget/NuGet.exe" pack %workspace%\\Aspose.Words.Cloud.Sdk\\Aspose.Words.Cloud.Sdk.nuspec -Prop Configuration=Release').trim()
			println packageCreationOutput
								
			strWithPackageName = packageCreationOutput.findAll(/.*package.*(Aspose.Words-Cloud.*)/)[0]
			println strWithPackageName			
	    	def finder = (strWithPackageName =~ /.*package.*(Aspose.Words-Cloud.*)/)			
	    	println finder.matches()
			groupPackageName = finder.group(1)
			println groupPackageName
			packageName = groupPackageName.substring(0, groupPackageName.length() - 2)
			println packageName					
        }
		       
	    stage('Merge master to nugetTest'){
	    	bat "git checkout --merge nugetTest"
	    	bat "git reset --hard origin/nugetTest"
	    	bat "git merge --no-ff --allow-unrelated-histories origin/master"
	    	bat "git diff --name-status"			
	    	bat 'git commit -am "Merged master branch to nugetTest" || exit 0'
	    	
	    	withCredentials([usernamePassword(credentialsId: '9d6c4dfa-042c-4ed1-81c7-9175179dddda', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
	    		bat "git push https://WordsCloud:$gitPass@github.com/aspose-words-cloud/aspose-words-cloud-dotnet nugetTest"
	    	}
	    }
	
	    stage('add new package to repository'){
	    		    		    			
	    	bat "git diff --name-status"
			bat "git ls-files --others --exclude-standard"
			bat "git add -A"
	    	bat 'git commit -am "new version of package added to repository" || exit 0'
	    	withCredentials([usernamePassword(credentialsId: '9d6c4dfa-042c-4ed1-81c7-9175179dddda', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
	    		bat "git push https://WordsCloud:$gitPass@github.com/aspose-words-cloud/aspose-words-cloud-dotnet nugetTest"
	    	}
	    }
		    			                
    } finally {                       
        deleteDir()
    }
}

stage('wait for publish confirmation'){
	timeout(time:1, unit:'DAYS') {
		input message:'Publish packet?'
	}
}


node('billing-qa') {      
    try {
        stage('checkout again'){
           checkout([$class: 'GitSCM', branches: [[name: '*/nugetTest']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '9d6c4dfa-042c-4ed1-81c7-9175179dddda', url: 'https://github.com/aspose-words-cloud/aspose-words-cloud-dotnet.git/']]])          
					
			bat "git checkout nugetTest"
	    	bat "git reset --hard origin/nugetTest"
        }
		
	    stage('publish package'){
			withCredentials([string(credentialsId: '0e0811d1-19c8-4d7a-97ec-cf16f4bea871', variable: 'token')]) {
			    pubscript = '".nuget/NuGet.exe" push '+ packageName +'  -ApiKey ' + token + ' -Timeout 610 -Source https://www.nuget.org/api/v2/package'
			    println pubscript
				bat pubscript
			}
		}
    } finally {                       
        deleteDir()
    }
}

stage('wait for nuget indexed'){
	timeout(time:1, unit:'DAYS') {
		input message:'Is packet already indexed on nuget.org?'
	}
}

node('billing-qa') {      
    try {
        stage('checkout again'){
           checkout([$class: 'GitSCM', branches: [[name: '*/nugetTest']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '9d6c4dfa-042c-4ed1-81c7-9175179dddda', url: 'https://github.com/aspose-words-cloud/aspose-words-cloud-dotnet.git/']]])          
					
			bat "git checkout nugetTest"
	    	bat "git reset --hard origin/nugetTest"
			bat "git config user.email \"jenkins.aspose@gmail.com\""
			bat "git config user.name \"jenkins\""
        }
			    		
		stage('change reference to published package'){			
			bat 'dotnet remove "Aspose.Words.Cloud.Sdk.BddTests/Aspose.Words.Cloud.Sdk.BddTests.csproj" package Aspose.Words-Cloud'
			bat 'dotnet add "Aspose.Words.Cloud.Sdk.BddTests/Aspose.Words.Cloud.Sdk.BddTests.csproj" package Aspose.Words-Cloud'
			
			bat 'dotnet remove "Aspose.Words.Cloud.Sdk.Tests/Aspose.Words.Cloud.Sdk.Tests.csproj" package Aspose.Words-Cloud'
			bat 'dotnet add "Aspose.Words.Cloud.Sdk.Tests/Aspose.Words.Cloud.Sdk.Tests.csproj" package Aspose.Words-Cloud'
			
			bat "git diff --name-status"
	    	bat 'git commit -am "reference changed to published package" || exit 0'
	    	withCredentials([usernamePassword(credentialsId: '9d6c4dfa-042c-4ed1-81c7-9175179dddda', passwordVariable: 'gitPass', usernameVariable: 'gitUsername')]) {
	    		bat "git push https://WordsCloud:$gitPass@github.com/aspose-words-cloud/aspose-words-cloud-dotnet nugetTest"
	    	}			
		}
		
    } finally {                       
        deleteDir()
    }
}


stage('test published package'){
	build job: 'words-sdk-net', 
	   parameters: [
		string(name: 'branch', value: 'nugetTest'), 
		string(name: 'testServerUrl', value: 'https://api.aspose.cloud')						
	   ]
}   